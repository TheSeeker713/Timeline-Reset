/* Glitch Layer Animations */

#glitch-layer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -30;
  opacity: 0;
  transition: opacity 0.5s ease;
  
  /* CSS variable for dynamic intensity control */
  --glitch-level: 0.12;
  
  /* Vignette with mask-image to protect center ~60% */
  background: radial-gradient(
    ellipse at center,
    transparent 0%,
    transparent 30%,
    rgba(0, 240, 252, calc(var(--glitch-level) * 0.15)) 60%,
    rgba(0, 240, 252, calc(var(--glitch-level) * 0.35)) 100%
  );
  
  /* Mask-image to ensure center stays minimally affected */
  -webkit-mask-image: radial-gradient(
    ellipse at center,
    transparent 0%,
    rgba(0, 0, 0, 0.1) 30%,
    rgba(0, 0, 0, 0.5) 60%,
    rgba(0, 0, 0, 1) 80%,
    rgba(0, 0, 0, 1) 100%
  );
  mask-image: radial-gradient(
    ellipse at center,
    transparent 0%,
    rgba(0, 0, 0, 0.1) 30%,
    rgba(0, 0, 0, 0.5) 60%,
    rgba(0, 0, 0, 1) 80%,
    rgba(0, 0, 0, 1) 100%
  );
  
  /* Default: subtle effects */
  animation: glitchShift calc(8s / (var(--glitch-level) + 0.5)) ease-in-out infinite;
}

#glitch-layer.active {
  opacity: 1;
}

/* Glitch animations - amplitude tied to --glitch-level */
@keyframes glitchShift {
  0%, 100% {
    transform: translate(0, 0);
    filter: hue-rotate(0deg);
  }
  25% {
    transform: translate(
      calc(-2px * var(--glitch-level)),
      calc(2px * var(--glitch-level))
    );
    filter: hue-rotate(calc(5deg * var(--glitch-level)));
  }
  50% {
    transform: translate(
      calc(2px * var(--glitch-level)),
      calc(-1px * var(--glitch-level))
    );
    filter: hue-rotate(calc(-5deg * var(--glitch-level)));
  }
  75% {
    transform: translate(
      calc(-1px * var(--glitch-level)),
      calc(-2px * var(--glitch-level))
    );
    filter: hue-rotate(calc(3deg * var(--glitch-level)));
  }
}

@keyframes chromaSplit {
  0%, 100% {
    text-shadow: 
      calc(-2px * var(--glitch-level)) 0 0 rgba(255, 0, 0, calc(0.5 * var(--glitch-level))),
      calc(2px * var(--glitch-level)) 0 0 rgba(0, 255, 255, calc(0.5 * var(--glitch-level)));
  }
  50% {
    text-shadow:
      calc(2px * var(--glitch-level)) 0 0 rgba(255, 0, 0, calc(0.5 * var(--glitch-level))),
      calc(-2px * var(--glitch-level)) 0 0 rgba(0, 255, 255, calc(0.5 * var(--glitch-level)));
  }
}

@keyframes warpPulse {
  0%, 100% {
    transform: scale(1) skewX(0deg);
  }
  50% {
    transform: scale(calc(1 + 0.02 * var(--glitch-level))) skewX(calc(0.5deg * var(--glitch-level)));
  }
}

/* Scanline effect */
@keyframes scanline {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100vh);
  }
}

/* Scanline pseudo-element for extreme glitch */
#glitch-layer[data-intensity="extreme"]::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: rgba(0, 240, 252, 0.3);
  animation: scanline 2s linear infinite;
  opacity: var(--glitch-level);
}

/* Intensity levels */
#glitch-layer[data-intensity="low"] {
  animation-duration: 8s;
  opacity: 0.3;
}

#glitch-layer[data-intensity="medium"] {
  animation-duration: 4s;
  opacity: 0.6;
}

#glitch-layer[data-intensity="high"] {
  animation-duration: 2s;
  opacity: 0.9;
}

#glitch-layer[data-intensity="extreme"] {
  animation: glitchShift 0.5s ease-in-out infinite,
             chromaSplit 0.3s ease-in-out infinite;
  opacity: 1;
}

/* Apply glitch effects to elements */
.glitch-text {
  animation: chromaSplit 0.3s ease-in-out infinite;
}

.glitch-warp {
  animation: warpPulse 2s ease-in-out infinite;
}
